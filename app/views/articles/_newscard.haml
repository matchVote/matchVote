.newscard.fade-in{id: article.id}
  .row
    .btn-group-vertical.news-vote-btn.pull-right
      .newsworthiness.btn.btn-lg.glyphicon.glyphicon-circle-arrow-up{title: "Newsworthy", type: "increment"}
      .news-vote-count= article.newsworthiness_count
      %h6 Newsworthy
      .newsworthiness.btn.btn-lg.glyphicon.glyphicon-circle-arrow-down{title: "Not Newsworthy", type: "decrement"}
    .news-title
      = link_to article.url, target: "_blank" do
        %h3.read-article= article.title
      .news-author
        = article.authored_by
        %span.news-date= article.published
      %hr
    .news-summary
      .col-md-7
        .featured_image_trigger
          =image_tag article.top_image_url, class: "article_featured_image"
          %ul
            - article.summary_points.each do |sp|
              %li= sp
        - if !article.top_keywords.empty?
          .news-topics
            %ul
              %li
                %strong Topics:
              - article.top_keywords.each do |keyword|
                %li
                  %a= keyword
          .news-topics
            %ul
              %li
                %strong Mentioned:
              - article.mentioned_reps.each do |rep|
                %li= link_to rep.full_name, "/representative/#{rep.slug}"
        %hr
        %center
          = link_to article.url, target: "_blank", style: "text-decoration: none" do
            .read-article.btn.btn-sm.btn-danger= article.read_time
          .show-comments.btn.btn-sm.btn-default
            %span.comment-count{data: { article_id: article.id }}= article.comments.size
            Comments
          .hide-comments.btn.btn-sm.btn-black{style: "display:none"}
            Close Comments
          .btn.btn-sm.btn-default
            .glyphicon.glyphicon-share{title: "Share"}
            Share
          .btn.btn-sm.btn-default.bookmark{class: ("label-info" if article.bookmarked?(current_user))}
            .glyphicon.glyphicon-bookmark{title: "Bookmark Article"}
            Bookmark
      .col-md-5
        = render "articles/pulsepoll"
  .news-comments{style: "display:none", data: { article_id: article.id }}
    .well
      .writecomment
        .row
          .col-md-10
            .form-group
              %textarea.form-control.comment-box{placeholder: article.comment_box_text(current_user),
                data: { ctbl_id: article.id, ctbl_type: "Article" }}
              %span.comment-box-error{style: "display:none"} Comment textbox cannot be blank
          .col-md-2
            %center
              .btn.btn-sm.btn-primary.submit-comment{data: { account_type: current_user.account_type,
                ctbl_id: article.id, ctbl_type: "Article", user_id: current_user.id }}
                - if current_user.account.standard?
                  = image_tag current_user.profile_pic_url, title: "@#{current_user.username}"
                  Upgrade
                - else
                  Submit
      %ul
        %li
          %strong
            %span.comment-count{data: { article_id: article.id }}= article.comments.size
            Comments
        %li
          Comments will be locked in 45 hours
        %li
          %select.form-control.signup-field.sort-comments
            %option{value: "created_at"} Sort by Newest
            %option{value: "likes"} Sort by Most Loved
            %option{value: "reply_count"} Sort by Most Replies

      .comments-list{data: { article_id: article.id }}
        - article.comments.take(comment_limit).each do |comment|
          = render "articles/comments/comment",
            comment: CommentPresenter.new(comment),
            reply_level: 0,
            reply_limit: reply_limit
      - if !article.remaining_comments_count(comment_limit).zero?
        %center
          = link_to article.url, target: "_blank", style: "text-decoration: none" do
            .btn.btn-xs.btn-link
              View
              = article.remaining_comments_count(comment_limit)
              More Comments
