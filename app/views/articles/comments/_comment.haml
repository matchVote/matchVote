.comment{class: comment.reply_level_class(reply_level),
         style: comment.displayed?(reply_level),
         data: { id: comment.id, reply_ids: comment.reply_ids }}
  = comment.text
  %hr
  .commentdetails
    %ul
      %li
        = link_to citizen_path(comment.user), style: "text-decoration:none" do
          = image_tag comment.user_profile_pic_url,
            class: "img", title: comment.username
      %li
        %strong= comment.username
      %li= comment.user_location
      %li
        = comment.created_at_date
        @
        = comment.created_at_time
      %li &nbsp
      %li
        .btn.btn-xs.btn-default.report-comment Report
        .btn.btn-xs.btn-default.show-replies{style: ("display:none" if comment.has_no_replies?),
          data: { comment_id: comment.id }}
          Show Replies
        .btn.btn-xs.btn-default.hide-replies{style: "display:none", data: { comment_id: comment.id }}
          Hide Replies
        .btn.btn-xs.like-button{class: ("like-button" if comment.liked?(current_user))}
          = comment.likes
          .glyphicon.glyphicon-heart
        .create-reply.btn.btn-xs.btn-primary{data: { comment_id: comment.id }}
          Reply
        .close-reply.btn.btn-xs.btn-black{style: "display:none", data: { comment_id: comment.id }}
          Close Reply
    .writereply{style: "display:none", data: { comment_id: comment.id }}
      .row
        .col-md-10
          .form-group
            %textarea.form-control.comment-box{data: { ctbl_id: comment.id, ctbl_type: "Comment" },
              placeholder: "Reply to #{comment.username}"}
            %span.comment-box-error{style: "display:none"} Textbox cannot be blank
        .col-md-2
          %center
            .btn.btn-sm.btn-primary.submit-comment{data: { ctbl_id: comment.id, ctbl_type: "Comment", reply_level: reply_level }}
              Submit
- comment.comments.each do |comment_reply|
  = render "articles/comments/comment",
    comment: CommentPresenter.new(comment_reply),
    reply_level: reply_level + 1
